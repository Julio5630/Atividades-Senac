Olá! Com base no código SQL fornecido, aqui está um **README** que descreve e documenta a estrutura do banco de dados para um sistema de e-commerce.

# **README: Estrutura do Banco de Dados E-commerce**

Este documento descreve a estrutura do banco de dados para um sistema de e-commerce. O esquema foi projetado para gerenciar usuários, produtos, categorias, endereços e pedidos.

---

## **Visão Geral**

O banco de dados, chamado `ecommerce`, é composto por seis tabelas principais:

* `usuarios`: Gerencia as informações dos clientes e usuários.
* `enderecos`: Armazena os endereços de entrega e faturamento dos usuários.
* `categorias`: Categoriza os produtos disponíveis.
* `produtos`: Lista os itens para venda no e-commerce.
* `pedidos`: Registra os pedidos feitos pelos usuários.
* `itens_pedidos`: Associa os produtos aos seus respectivos pedidos, detalhando a quantidade e o preço.

---

## **Estrutura das Tabelas**

### `usuarios`
Esta tabela armazena os dados de registro dos usuários.

* `id` (INT, PRIMARY KEY): Identificador único do usuário.
* `nome` (VARCHAR): Nome completo do usuário.
* `email` (VARCHAR, UNIQUE): Endereço de e-mail do usuário, usado para login.
* `telefone` (VARCHAR): Número de telefone do usuário.
* `celular` (VARCHAR): Número de celular do usuário.
* `senha` (VARCHAR): Senha do usuário. **(Atenção: A senha não deve ser armazenada em texto puro em um ambiente de produção)**.
* `criado_em` (DATETIME): Data e hora em que o usuário foi criado.

### `enderecos`
Armazena os endereços associados aos usuários.

* `id` (INT, PRIMARY KEY): Identificador único do endereço.
* `cliente_id` (INT): Chave estrangeira que referencia o `id` da tabela `usuarios`.
* `rua` (VARCHAR): Nome da rua.
* `numero` (VARCHAR): Número do imóvel.
* `complemento` (VARCHAR): Complemento do endereço.
* `bairro` (VARCHAR): Nome do bairro.
* `cidade` (VARCHAR): Nome da cidade.
* `estado` (VARCHAR): Sigla do estado (UF).
* `cep` (VARCHAR): Código de Endereçamento Postal.

### `categorias`
Armazena as diferentes categorias de produtos.

* `id` (INT, PRIMARY KEY): Identificador único da categoria.
* `nome` (VARCHAR): Nome da categoria.
* `descricao` (TEXT): Descrição detalhada da categoria.

### `produtos`
Esta tabela armazena os dados dos produtos que são vendidos no e-commerce.

* `id` (INT, PRIMARY KEY): Identificador único do produto.
* `cliente_id` (INT): **(Atenção: A coluna parece ser uma referência incorreta, pois a tabela `produtos` geralmente não tem um `cliente_id`. Talvez seja um erro no script SQL e deveria ser `categoria_id` ou algo similar)**.
* `data_pedido` (DATETIME): Data e hora do pedido. **(Atenção: Esta coluna também parece fora de contexto para a tabela de produtos. Sugere-se revisar o esquema)**.
* `status` (VARCHAR): Situação do produto ('Pendente').
* `total` (DECIMAL): Valor total.

### `pedidos`
Esta tabela registra os pedidos realizados pelos usuários.

* `id` (INT, PRIMARY KEY): Identificador único do pedido.
* `pedido_id` (INT): **(Atenção: Coluna duplicada com o ID, sugere-se revisão)**.
* `data_pedido` (DATETIME): Data e hora em que o pedido foi feito.
* `situacao` (VARCHAR): Situação atual do pedido (ex: 'Pendente', 'Em processamento', 'Enviado', 'Entregue').
* `total` (DECIMAL): Valor total do pedido.

### `itens_pedidos`
Associa produtos a pedidos e armazena os detalhes de cada item dentro de um pedido.

* `id` (INT, PRIMARY KEY): Identificador único do item do pedido.
* `pedido_id` (INT): Chave estrangeira que referencia o `id` da tabela `pedidos`.
* `produto_id` (INT): Chave estrangeira que referencia o `id` da tabela `produtos`.
* `quantidade` (INT): Quantidade do produto no pedido.
* `preco_unitario` (DECIMAL): Preço do produto no momento da compra.

---

## **Modificações e Observações**

* A tabela `clientes` foi renomeada para `usuarios` (`rename table clientes to usuarios`).
* A coluna `telefone` em `clientes` foi alterada para `celular` e seu tipo de dado foi ajustado (`alter table clientes change column telefone celular varchar(15)`).
* Uma nova coluna `telefone` foi adicionada à tabela `usuarios` (`alter table usuarios add column telefone varchar(12) after email`).
* **Nota**: Existe um possível erro de lógica no script original, onde a tabela `produtos` contém colunas de pedido (`cliente_id`, `data_pedido`, `status`, `total`). A estrutura de uma tabela de produtos deve focar nas características do item (nome, preço, estoque, etc.), enquanto os detalhes do pedido devem estar na tabela `pedidos` e `itens_pedidos`. A tabela `pedidos` também tem um `pedido_id` redundante. Essas inconsistências precisam ser corrigidas para um modelo de dados mais robusto e funcional.
